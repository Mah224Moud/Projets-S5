<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="class_email" kind="class" language="C++" prot="public">
    <compoundname>Email</compoundname>
    <includes refid="_email_8h" local="yes">Email.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_email_1a51c860409672625164d836055511fbe7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Email::identifiant</definition>
        <argsstring></argsstring>
        <name>identifiant</name>
        <briefdescription>
<para>L&apos;identifiant de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="23" column="21" bodyfile="Email.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_email_1adbf96bf6ecf0163270786b511ca9073f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Email::domaine</definition>
        <argsstring></argsstring>
        <name>domaine</name>
        <briefdescription>
<para>Le domaine de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="25" column="21" bodyfile="Email.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_email_1a546db0116c6ef2d38440ecf35fc642f4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Email::mc</definition>
        <argsstring></argsstring>
        <name>mc</name>
        <briefdescription>
<para>Le mc de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="27" column="21" bodyfile="Email.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_email_1a2cfcfea1e55511208e7858c33f48ad9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Email::Email</definition>
        <argsstring>()</argsstring>
        <name>Email</name>
        <briefdescription>
<para>Constructeur par défaut de la classe <ref refid="class_email" kindref="compound">Email</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Ce constructeur initialise une adresse mail vide. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="31" column="9" bodyfile="Email.cpp" bodystart="9" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_email_1a61920b1f7602e5eb80edf1e4bd96e6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Email::Email</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>Email</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Constructeur avec paramètre de la classe <ref refid="class_email" kindref="compound">Email</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="33" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_email_1abdf70d7f147a59a96685cd4ad3947c2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Email::getIdentifiant</definition>
        <argsstring>() const</argsstring>
        <name>getIdentifiant</name>
        <briefdescription>
<para>Pour récuperer la partie identifiant de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
<para>Cette fonction renvoie la partie qui se trouve avant le &apos;@&apos; dans l&apos;adresse mail. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="35" column="21" bodyfile="Email.cpp" bodystart="30" bodyend="33"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="11" endline="37">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_email_1a6025851513c653ec0a0a3c98624f6ec5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Email::getDomaine</definition>
        <argsstring>() const</argsstring>
        <name>getDomaine</name>
        <briefdescription>
<para>Pour récuperer la partie domaine de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
<para>Cette fonction renvoie la partie qui se trouve entre le &apos;@&apos; et le dernier &apos;.&apos; dans l&apos;adresse mail. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="36" column="21" bodyfile="Email.cpp" bodystart="48" bodyend="51"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="11" endline="37">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_email_1a4fb56b50d5636ea445a204d2a0a19a04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Email::getMc</definition>
        <argsstring>() const</argsstring>
        <name>getMc</name>
        <briefdescription>
<para>Pour récuperer la partie mc de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
<para>Cette fonction renvoie la partie qui se trouve après le dernier &apos;.&apos; dans l&apos;adresse mail. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="37" column="21" bodyfile="Email.cpp" bodystart="66" bodyend="69"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="11" endline="37">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_email_1a55e706122fc07c360e8d000a32ec2a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Email::setDomaine</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>setDomaine</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Pour definir la partie domaine de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>domaine</parametername>
</parameternamelist>
<parameterdescription>
<para>: le domaine de l&apos;adresse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="39" column="14" bodyfile="Email.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_email_1aeada00eb01f8ec7252099b7421fe6ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Email::setIdentifiant</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>setIdentifiant</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Pour definir la partie Identifiant de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>: l&apos;identifiant de l&apos;adresse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="40" column="14" bodyfile="Email.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_email_1a69a9d94cb62cfe37069f9046adb254a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Email::setMc</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>setMc</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Pour definir la partie mc de l&apos;adresse. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mc</parametername>
</parameternamelist>
<parameterdescription>
<para>: le mc de l&apos;adresse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="41" column="14" bodyfile="Email.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_email_1ad008c905fb780e47c5fd5d5a1ba6eef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Email::fromString</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>fromString</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Pour décomposer une adresse mail et récupérer les différentes parties. </para>
        </briefdescription>
        <detaileddescription>
<para>Cette fonction recupère une adresse mail complète (string) et récupére les différentes parties. <simplesect kind="warning"><para>Si l&apos;adresse mail a une syntaxe incorrecte, aucune partie n&apos;est enregistrée. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adr</parametername>
</parameternamelist>
<parameterdescription>
<para>: de type String, elle représente l&apos;adresse mail complète; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="43" column="14" bodyfile="Email.cpp" bodystart="86" bodyend="111"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="11" endline="37">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_email_1acfd186a5418525a835fbcf2030620a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string Email::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Email.h" line="44" column="22" bodyfile="Email.cpp" bodystart="114" bodyend="120"/>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="11" endline="37">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>La classe <ref refid="class_email" kindref="compound">Email</ref> permet de stocker l&apos;adresse mail d&apos;un contact. </para>
    </briefdescription>
    <detaileddescription>
<para>Dans la classe email, nous pouvons manipuler séparement toutes les parties de l&apos;adresse. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>Email</label>
        <link refid="class_email"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-domaine</edgelabel>
          <edgelabel>-identifiant</edgelabel>
          <edgelabel>-mc</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Email.h" line="19" column="1" bodyfile="Email.h" bodystart="20" bodyend="45"/>
    <listofallmembers>
      <member refid="class_email_1adbf96bf6ecf0163270786b511ca9073f" prot="private" virt="non-virtual"><scope>Email</scope><name>domaine</name></member>
      <member refid="class_email_1a2cfcfea1e55511208e7858c33f48ad9d" prot="public" virt="non-virtual"><scope>Email</scope><name>Email</name></member>
      <member refid="class_email_1a61920b1f7602e5eb80edf1e4bd96e6c7" prot="public" virt="non-virtual"><scope>Email</scope><name>Email</name></member>
      <member refid="class_email_1ad008c905fb780e47c5fd5d5a1ba6eef6" prot="public" virt="non-virtual"><scope>Email</scope><name>fromString</name></member>
      <member refid="class_email_1a6025851513c653ec0a0a3c98624f6ec5" prot="public" virt="non-virtual"><scope>Email</scope><name>getDomaine</name></member>
      <member refid="class_email_1abdf70d7f147a59a96685cd4ad3947c2c" prot="public" virt="non-virtual"><scope>Email</scope><name>getIdentifiant</name></member>
      <member refid="class_email_1a4fb56b50d5636ea445a204d2a0a19a04" prot="public" virt="non-virtual"><scope>Email</scope><name>getMc</name></member>
      <member refid="class_email_1a51c860409672625164d836055511fbe7" prot="private" virt="non-virtual"><scope>Email</scope><name>identifiant</name></member>
      <member refid="class_email_1a546db0116c6ef2d38440ecf35fc642f4" prot="private" virt="non-virtual"><scope>Email</scope><name>mc</name></member>
      <member refid="class_email_1a55e706122fc07c360e8d000a32ec2a7a" prot="public" virt="non-virtual"><scope>Email</scope><name>setDomaine</name></member>
      <member refid="class_email_1aeada00eb01f8ec7252099b7421fe6ab1" prot="public" virt="non-virtual"><scope>Email</scope><name>setIdentifiant</name></member>
      <member refid="class_email_1a69a9d94cb62cfe37069f9046adb254a3" prot="public" virt="non-virtual"><scope>Email</scope><name>setMc</name></member>
      <member refid="class_email_1acfd186a5418525a835fbcf2030620a9a" prot="public" virt="non-virtual"><scope>Email</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
